model DCOPF
uses "mmxprs","mmsheet","mmetc","mmjobs","mmsystem"


parameters
	M = 10000
end-parameters

declarations
  NUMNODES: set of real

  PMIN:  array(NUMNODES) of real
  PMAX:   array(NUMNODES) of real
  D:   array(NUMNODES) of real
  
  NUMLINES: set of real
  NODEI:  array(NUMLINES) of real
  NODEJ:  array(NUMLINES) of real
  X:  array(NUMLINES) of real
  FMAX:  array(NUMLINES) of real

end-declarations


initialisations from 'mmsheet.xlsx:'+'data.xlsm'
  NUMNODES
  NUMLINES
  PMAX as "skiph;noindex;PMAX"
  PMIN as "skiph;noindex;PMIN"
  D as "skiph;noindex;D"
  NODEI as "skiph;noindex;NODEI"
  NODEJ as "skiph;noindex;NODEJ"
  X as "skiph;noindex;X"
  FMAX as "skiph;noindex;FMAX"
end-initialisations






! initialisations from 'mmsheet.excel:'+'data.xlsx'
! 	A 			as "skiph;noindex;A"
! 	B			as "skiph;noindex;B"
! end-initialisations


! procedure createYBus
!   forall(i in setNodes) do
!     forall(j in setNodes) do
!       B(i,j) := 10*i + j
!     end-do
!   end-do
! end-procedure




! writeln(B)

end-model
declarations
  P_MIN: array(gen) of real
  P_MAX: array(gen) of real
  F_MAX: array(lineas) of real
  CV: array(gen) of real
  p: array(gen,escenarios) of mpvar		!potencias
  f: array(lineas,escenarios) of mpvar
  theta: array(barras,escenarios) of mpvar
  Objective:linctr
end-declarations

initialisations from 'mmsheet.excel:'+'data.xlsx'
	A 			as "skiph;noindex;A"
	B			as "skiph;noindex;B"
end-initialisations


! function suma(x: integer): integer
!   returned :=x*3
! end-function

