model DCOPF
uses "mmxprs","mmsheet","mmetc","mmjobs","mmsystem"


parameters
	M = 10000
end-parameters

declarations
  NUMNODES: set of real

  PMIN:  array(NUMNODES) of real
  PMAX:   array(NUMNODES) of real
  D:   array(NUMNODES) of real

  NUMLINES: set of real
  NODEI:  array(NUMLINES) of real
  NODEJ:  array(NUMLINES) of real
  X:  array(NUMLINES) of real
  FMAX:  array(NUMLINES) of real

  B: array(NUMNODES,NUMNODES) of real
end-declarations


initialisations from 'mmsheet.xlsx:'+'data.xlsm'
  NUMNODES
  NUMLINES
  PMAX as "skiph;noindex;PMAX"
  PMIN as "skiph;noindex;PMIN"
  D as "skiph;noindex;D"
  NODEI as "skiph;noindex;NODEI"
  NODEJ as "skiph;noindex;NODEJ"
  X as "skiph;noindex;X"
  FMAX as "skiph;noindex;FMAX"
end-initialisations


procedure readBMatrix
  forall(i in NUMLINES) do
    ni := NODEI(i)
    nj := NODEJ(i)
    yij := 1/X(i)
    B(ni,nj) := yij
  end-do
end-procedure

procedure createBMatrix
  forall(i in NUMNODES) do
    B(i,i) := sum(j in NUMNODES)B(i,j)
  end-do
  forall(i in NUMNODES) do
    forall(j in NUMNODES) do
      if(i<>j) then
        B(i,j) := -B(i,j)
      end-if
    end-do
  end-do
end-procedure


readBMatrix
createBMatrix


end-model
